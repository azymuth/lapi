#map-canvas

.h100.bgwhite{:style =>"z-index:100; opacity:0.9; position:absolute; top:0px; left:0px; width:100%" }
  .t3em.josefin-sans.twenty-padding.top-twenty-margin.tbold
    \- Course Finder -
  .inline-block{:style => "position:absolute; z-index:100; left:390px; top:10px"}
    =image_tag("/assets/icons/header.gif")
.bgwhite{:style=> "z-index: 50; position:absolute; width:350px; min-height:100%; top:0"}
  %div.twenty-padding.lato.tbold.t1-6em.tgreen{:style => "position:absolute; top:100px"}
    What are you looking for?
    .t0-8em 
      .top-twenty-margin.tblack
        Subject / Interest
        =image_tag("/assets/icons/course.gif")
      .top-five-margin
        =form_tag "/search_subject", :class => "navbar-search", :method => :get do
          =text_field_tag :q, nil, :class => "search-query", :placeholder => "Search subjects"
      %br
      %br
      .top-twenty-margin.tblack
        Institution
        =image_tag("/assets/icons/provider.gif")
      .top-five-margin
        =form_tag "/search_institution", :class => "navbar-search", :method => :get do
          =text_field_tag :q, nil, :class => "search-query", :placeholder => "Search institutions"
      %br
      %br
      .top-twenty-margin.tblack
        Postcode
        =image_tag("/assets/icons/location.gif")
        .top-five-margin
          =form_tag "/search_postcode", :class => "navbar-search", :method => :get do
            =text_field_tag :q, nil, :class => "search-query", :placeholder => "Search postcode" 
      %br
      %br
      .top-twenty-margin.tblack
        Qualification
        =image_tag("/assets/icons/qualification.gif")
        .top-five-margin
          =form_tag "/search_qualification", :class => "navbar-search", :method => :get do
            =text_field_tag :q, nil, :class => "search-query", :placeholder => "Search qualification type"
      %br
      %br
      .top-twenty-margin.tblack
        
        SCQF Level
        =image_tag("/assets/icons/levels.gif") 
      .top-five-margin
        =form_tag "/search_scqf", :class => "navbar-search", :method => :get do
          =text_field_tag :q, nil, :class => "search-query", :placeholder => "Search scqf level"

.inline{:style => "z-index:150;position:absolute; top:20px; right:100px; width: 150px;box-shadow: 4px 0px 4px #555; "}
  .red.ten-padding{:style => "border-left:1px solid rgb(67, 171,  163); border-right:1px solid rgb(67, 171,  163); border-top:1px solid rgb(67, 171,  163)"}
    .block.t1-6em.twhite.josefin-sans{:style => "display:block"}
      Search results
    .block{:style => "display:block; max-height:475px; overflow:hidden"}
      -@establishments[0..10].each do |establishment|
        %br
        -if establishment
          %a{:href => "establishment.website_url", :style => "color:#222"}
            =establishment.establishment_name
      -if @establishments.count >= 10
        .block.twhite
          +
          = @establishments.count - 10
          more... 
  .block
    =image_tag("/assets/icons/ribbon.gif", :size =>"154x23")


:javascript  
  function initialize() {
    var mapOptions = {
      center: new google.maps.LatLng(55.945, -3.185),
      zoom: 6,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      disableDefaultUI: true,
    };

    var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
    // var contentString = '<div id="content" class="w150 h150">get with this</div>';

    function addInfoWindow(marker, message) {
      var info = message;
      var infoWindow = new google.maps.InfoWindow({
        content: message
      });

      google.maps.event.addListener(marker, 'click', function(){
        infoWindow.open(map, marker)
      });
    };

    function addInfoBox(marker, message) {
      var info = message;
      var boxText = document.createElement("div");
      boxText.style.cssText = "border-left:1px solid rgb(67, 171,  163); border-right:1px solid rgb(67, 171,  163); border-top:1px solid rgb(67, 171,  163); background: white; padding: 5px; min-height:175px; margin-bottom:20px;";
      boxText.innerHTML = info;
      var myOptions = {
                     content: boxText
                    ,disableAutoPan: false
                    ,maxWidth: 0
                    ,pixelOffset: new google.maps.Size(-90, -245)
                    ,zIndex: null
                    ,boxStyle: { 
                      
                      background: "url('/assets/icons/bottom_box.gif')"
                      ,opacity: 0.85
                      ,width: "200px"
                     }
                    ,closeBoxMargin: "10px 2px 2px 2px"
                    ,closeBoxURL: "http://www.google.com/intl/en_us/mapfiles/close.gif"
                    ,infoBoxClearance: new google.maps.Size(1, 1)
                    ,isHidden: false
                    ,pane: "floatPane"
                    ,enableEventPropagation: true   
      };
      var ib = new InfoBox(myOptions);
      google.maps.event.addListener(marker, 'click', function(){
        ib.open(map, marker);
      });
    }
    
    function setBounds(){
      var LatLngList = new Array ( )

      for (var i= 0; i< establishments.length; i++) {
        LatLngList.push(new google.maps.LatLng(establishments[i]["lat"],establishments[i]["long"]));
       }
      
      var bounds = new google.maps.LatLngBounds();

      for (var i=0, LtLgLen = LatLngList.length; i < LtLgLen; i++) {
         bounds.extend (LatLngList[i]);
      }

      for (var i=0;i<establishments.length;i++)
      { 
        var marker = new google.maps.Marker({
           position:  new google.maps.LatLng(establishments[i]["lat"],establishments[i]["long"]),
           map: map,
           icon:"/assets/icons/marker.gif"

        });
        
        addInfoBox(marker, "<a class = \"josefin-sans tbold\" href = \"" + "http://" + establishments[i]["website_url"]+ "\">"+ establishments[i]["establishment_name"] + "</a> <br>" + "<div class =\"tbold\">" + establishments[i]["education_type"] + "</div>" + establishments[i]["email"] + "<br>"+ establishments[i]["phone"] + "<br>" + "<br/><div class =\"t0-8em\">" + establishments[i]["address"] + "</div>");
      } 
      map.fitBounds (bounds);
      
    }

    var establishments = #{@establishments.to_json}
    
    if (establishments.length == 0){
      console.log("true")
      console.log(establishments.length)
      var marker = new google.maps.Marker({
        position: new google.maps.LatLng("55.77", "-3.00"),
        map: map,
      });

    }
    else {
      console.log(establishments.length)
      console.log("false")
      setBounds();
    }  


  }

  function loadScript() {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyDSxwX0QVXxSm2-rHIisLXOSrj5Lw2ZINs&sensor=true&callback=initialize";
  
    document.body.appendChild(script);
    console.log("loaded google api")    
  }
  
  function infoBoxLoad(){
    var scriptInfoBox = document.createElement("script");
    scriptInfoBox.type = "text/javascript";
    scriptInfoBox.src = "http://google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox.js";
    document.body.appendChild(scriptInfoBox);
    scriptInfoBox.load = initialize();
    console.log("loaded infobox") 
  }  

  window.load = initialize();

                           